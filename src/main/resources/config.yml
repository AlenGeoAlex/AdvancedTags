version:

##prefix -> Prefix for the plugin messages, Leave empty if no prefix is required
##The plugin utilizes the Iridium Color API, It will support Hex Colors on servers higher than 1.15. If the native server does not support it
##The plugin will automatically try to convert all your text to the legacy color codes.
##The usage of the color codes has been described on the Github of Iridium Color API. (Link Below)
## https://github:com/Iridium-Development/IridiumColorAPI:
prefix: "&7[<SOLID:FF0000>Advanced<SOLID:ABA6A6>Tags&7] &8Â»"

##Storage method plugin should utilize to store data
##DBType: Which Database Type Should the plugin should use
##Available DBTypes:
##H2 -> H2 is a local storage system (Better to use than SQLite) Default
##SQLite -> SQLite is also a local storage System
##MySQL -> MySQL is an online storage database system, Requires a MySQL Server. The plugin uses HikkariCP for performance
##PostGreSQL -> Better Than MySQL in Storage
##MongoDB -> Coming Soon!
##mysql-settings: Basic MySQL Settings
##mongoDB-settings: MongoDB Connection URL, port and database
storage:
  DBType: "H2"
  mysql-settings:
    host: "localhost"
    port: "3306"
    username: "root"
    password: "password"
    database: "adv_tags"
    use-ssl: true
  mongoDB-settings:
    host:
    port:
    database:

set-random-if-invalid-dbtag: true

set-new-tag-when-unlocked: true


kick-if-failed:
  register:
    enable: true
    message: "&cFailed to register your user data to database - AdvancedTags"
  data-fetch:
    enable: true
    message: "&cFailed to fetch your user data from database - AdvancedTags"

tag-format:
  placeholder-format: " %tag% "

tag-shop:
  enabled: true

hooks:
  vault: true
  placeholder-api: true

global-tag:
  enable: true
  priority-for-global: true